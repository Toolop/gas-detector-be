// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  username    String        @unique
  email       String
  password    String
  name        String
  role        RolesOnUser[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  RoomandUser RoomOnUser[]
}

model Role {
  id        Int           @id @default(autoincrement())
  name      String
  user      RolesOnUser[]
  createdAt DateTime      @default(now())
  updatedAt DateTime?     @updatedAt
}

model RolesOnUser {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  @@id([userId, roleId])
}

model Room {
  id         Int          @id @default(autoincrement())
  name       String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?    @updatedAt
  RoomOnUser RoomOnUser[]
  Sensor     Sensor[]
}

model RoomOnUser {
  User   User @relation(fields: [userId], references: [id])
  userId Int
  room   Room @relation(fields: [roomId], references: [id])
  roomId Int

  @@id([userId, roomId])
}

model Sensor {
  id           Int           @id @default(autoincrement())
  name         String
  calibration  String?
  room         Room?         @relation(fields: [roomId], references: [id])
  roomId       Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
  SensorType   SensorType?   @relation(fields: [sensorTypeId], references: [id])
  SensorValue  SensorValue[]
  sensorTypeId Int?
  condition    Condition[]
}

model SensorType {
  id        Int       @id @default(autoincrement())
  name      String
  Sensor    Sensor[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model SensorValue {
  id        Int      @id @default(autoincrement())
  value     String
  createdAt DateTime @default(now())
  Sensor    Sensor?  @relation(fields: [sensorId], references: [id])
  sensorId  Int?
}

model Condition {
  id           Int       @id @default(autoincrement())
  upperDanger  Int
  upperWarning Int
  lowerDanger  Int
  lowerWarning Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  Sensor       Sensor?   @relation(fields: [sensorId], references: [id])
  sensorId     Int?      @unique
}
