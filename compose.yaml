version: '3'

services: 

  backend:
    build: 
      context: backend
    working_dir: /usr/src/app
    networks: 
      - aqms-net
    # volumes: 
    #   - ./backend:/usr/src/app
    #   - ./backend/node_modules:/usr/src/app/node_modules
    tty: true
    environment:
      - DATABASE_URL="postgresql://aqms:aqms@postgres:5432/aqms?schema=sample"
      - topicsensor="scofindo/gasdetector/sensor/#"
      - MONGODB="mongodb://aqms:aqms@mongodb:27017"
      - HOST="backend"
      - PORT="8080"
      - JWT_SECRET="qwerty!@#$%12345"

    ports: 
      - "8080:8080"
    command: npm run serve
    depends_on:
       - postgres
       - mongodb

  frontend:
    build: 
      context: frontend
    working_dir: /usr/src/app
    networks: 
      - aqms-net
    # volumes: 
    #   - ./frontend:/usr/src/app
    #   - ./frontend/node_modules:/usr/src/app/node_modules
    tty: true
    ports: 
      - "5173:5173"
    command: npm run dev

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=aqms
      - POSTGRES_USER=aqms
      - POSTGRES_DB=aqms
    networks: 
      - aqms-net

  mongodb:
    image: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=aqms
      - MONGO_INITDB_ROOT_USERNAME=aqms
      - MONGO_INITDB_ROOT_PASSWORD=aqms
    volumes:
      # seeding scripts
      # - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodata:/data/db
      - mongoconfig:/data/configdb
    networks:
      - aqms-net

  mongo-express:
    image: mongo-express
    # restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "aqms"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "aqms"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: "db"
      ME_CONFIG_MONGODB_AUTH_USERNAME: "admin"
      ME_CONFIG_MONGODB_AUTH_PASSWORD: "aqms"

      ME_CONFIG_MONGODB_URL: mongodb://aqms:aqms@mongodb:27017/
    networks:
      - aqms-net

  nginx:
    build: 
      context: nginx
    container_name: aqms-proxy
    restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - aqms-net
    depends_on:
       - backend
       - frontend

volumes:
  pgdata:
  mongodata:
  mongoconfig:

networks: 
  aqms-net:
    driver: bridge